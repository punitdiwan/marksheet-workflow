name: del remote ssh command
on: [push]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1
        with:
          host: con-de.maitretech.com
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            # Change to the backend directory
            cd backend/volumes
            config_file="postgrest.conf"

            # Extract the schema names from the config file
            de_schema=$(grep -oP 'db-schema\s*=\s*"\K[^"]+' "$config_file")
            del_schema="jnpsbhopal"

            # Convert the extracted comma-separated list into a JSON array
            array=$(echo "$de_schema" | sed 's/,/","/g' | sed 's/^/["/' | sed 's/$/"]/')

            # Remove the del_schema ("zeeshan") from the array using jq
            filtered_array=$(echo "$array" | jq --arg del_schema "$del_schema" '[.[] | select(. != $del_schema)]')

            # Print the filtered array
            echo "Filtered array: $filtered_array"

            append=""

            for item in $(echo "$filtered_array" | jq -r '.[]'); do
                echo "$item"
                append="${append},${item}"
            done
            echo "$append"

            str=$append

            # Remove the leading comma, if it exists
            cleaned_str=$(echo "$str" | sed 's/^,//')

            echo "db-schema = \"$cleaned_str\"" > "$config_file"
            # List files and display current working directory
            cat postgrest.conf
            pwd
            psql --version
            PGPASSWORD=your-super-secret-and-long-postgres-password psql -h con-de.maitretech.com -p 5433 -U postgres -d postgres -c "NOTIFY pgrst, 'reload config';"
            PGPASSWORD=your-super-secret-and-long-postgres-password psql -h con-de.maitretech.com -p 5433 -U postgres -d postgres -c "NOTIFY pgrst, 'reload schema';"

